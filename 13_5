from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
import asyncio
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

bot = Bot(token='')

dp = Dispatcher(bot, storage=MemoryStorage())

button_information = KeyboardButton('information')
button_calculation = KeyboardButton('calculation')

greet_kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True).row(button_information, button_calculation)

class UserState(StatesGroup):
    age = State()
    growth = State()
    weight = State()
    gender = State()

@dp.message_handler(commands=["start"])
async def start_commands(message):
    await message.answer('Please, choose the appropriate option :)', reply_markup = greet_kb)

@dp.message_handler(text="information")
async def information(message):
    await message.answer('This is bot for calculation of calories on your body data :) For continue press calculation!', reply_markup = greet_kb)

@dp.message_handler(text="calculation") 
async def set_age(message):
    await message.answer('Write you age, please')
    await UserState.age.set()

@dp.message_handler(state=UserState.age)
async def set_growth(message, state = FSMContext):
    await state.update_data(age_text=message.text)
    await message.answer('Write you growth, please')
    await UserState.next()

@dp.message_handler(state=UserState.growth)
async def  set_weight(message, state = FSMContext):
    await state.update_data(growth_text = message.text)
    await message.answer('Write you weight, please')
    await UserState.next()

@dp.message_handler(state=UserState.weight)
async def set_gender(message, state = FSMContext):
    await state.update_data(weigth_text = message.text)
    await message.answer('Write you gender, please(men or woman)')
    await UserState.next() 

@dp.message_handler(state=UserState.gender)
async def fsm_handler(message, state = FSMContext):
    await state.update_data(gender_text = message.text)
    data = await state.get_data()
    if data["gender_text"]=="woman":
        await message.answer(f'You calculation of calories: {round((10*float(data["weigth_text"]) + 6.25*float(data["growth_text"]))-(5*float(data["age_text"]) - 161), 1)}')
    elif data["gender_text"] == "men":
        await message.answer(f'You calculation of calories: {round((10*float(data["weigth_text"]) + 6.25*float(data["growth_text"]))-(5*float(data["age_text"]) + 5), 1)}')
    else:
        await message.answer('Inccorect data!')
        print(data["gender_text"], data["growth_text"], data["weigth_text"], data["age_text"])
    await state.finish()

@dp.message_handler()
async def all_message(message):
    await message.answer('Please, choose the appropriate option !', reply_markup = greet_kb)

if __name__ =='__main__':
    executor.start_polling(dp, skip_updates=True)

